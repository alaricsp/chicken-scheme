;;; $Id: objinst.chicken,v 1.2 2004/09/20 22:09:50 flw Exp $
;;; http://www.bagley.org/~doug/shootout/

(declare (fixnum) (disable-interrupts))

(require-extension meroon)

(define-generic (activate! (t)))

(define (print-bool b)
   (display (if b "true\n" "false\n")))

(define-class Toggle Object (state))

(define-class Nth-toggle Toggle (count-max counter))

(define-method (activate! (t Toggle))
  (Toggle-state-set! t (not (Toggle-state t)))
  t)

(define-method (activate! (n-t Nth-toggle))
  (let ((counter (+ 1 (Nth-toggle-counter n-t))))
    (Nth-toggle-counter-set! n-t counter)
    (if (>= counter (Nth-toggle-count-max n-t))
	(begin (Toggle-state-set! n-t (not (Toggle-state n-t)))
	       (Nth-toggle-counter-set! n-t 0)))
    n-t))

(define (main #!optional (n "1"))
  (let ((n (string->number n)))
    (let ((tog (make-Toggle #t)))
      (do ((i 0 (+ i 1))) ((= i 5))
	(print-bool (Toggle-state (activate! tog)))))
    (do ((i 0 (+ i 1))) ((= i n))
      (make-Toggle #t))
    (newline)
    (let ((ntog (make-Nth-toggle #t 3 0)))
      (do ((i 0 (+ i 1))) ((= i 8))
	(print-bool (Toggle-state (activate! ntog)))))
    (do ((i 0 (+ i 1))) ((= i n))
      (make-Nth-toggle #t 3 0))))
            
(apply main (command-line-arguments))
