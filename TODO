TODO for macro/module system					-*- Outline -*-

* bugs
** modules
*** code-duplication in compiler and evaluator for ##core#module
*** syntax-definitions in modules
    transformers use ##sys#meta-macro-environment + unset ##sys#current-module,
    this may not be be sufficient (expansion assumes ids are imported in used
    context) [is this still relevant? we could simply reexport the ids used in
    in the expansion]
*** "scheme" module does not include special forms ("define-syntax", etc.)

* test
** reexports
** compiled import libs
** syntax-export of srfi-14 module
** hiding of non-exported module vars in compiler
** def of exported module variables with defie-values
** foreign module
** bootstrap
** line-number retention over macro-expansion

* syntax-error
** if ##sys#current-module is set, add name to error message

* modules
** checks
*** redefinition of imported id 
*** reimport of imported id
** hide unexported module definitions

* update manual/NEWS
** hygienic macros
** modules
** import libraries
** expand unit (move stuff from eval)
** document extensions
*** user defined ellipsis
*** define-compiled-syntax
*** modules
** removed deprecated stuff
   [un]shift!
   andmap ormap
   byte-vector? byte-vector-fill!
   make-byte-vector byte-vector
   byte-vector-set! byte-vector-ref 
   byte-vector->list list->byte-vector
   string->byte-vector byte-vector->string
   byte-vector-length
   make-static-byte-vector static-byte-vector->pointer
   byte-vector-move! byte-vector-append!
   set-file-position! set-user-id! set-group-id!
   set-process-group-id!
** ack synrules authors
** DSSSL lambda-lists work only with imported "chicken" module
   let-optionals, etc.
** removals
*** "run-time" and "compile-time" situations for eval-when
*** syntax
    define-foreign-record
    define-foreign-enum
    define-record
    define-macro
*** compiler options
    -check-imports
    -emit-exports
    -import

* build
** compile and install import libraries
*** where? probably in repository...
*** install import libs as .scm when it is a static build

* csi
** describe should print if symbol is interned

* compiler
** warn if encountering global ref to "unquote[-splicing]"

* eggs to be adapted/obsoleted
** syntax-case (eval/expand integration?)
*** sxml-match
** codewalk
   must probably go... influences modules, crunch
** remove
   modules
** syntactic-closures?
** simple-macros
** alexpander
