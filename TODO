TODO for macro/module system					-*- Outline -*-

* reimplement all default macros hygienically

* test interaction of hygienic and non-hygienic macros
* fix problem of using lowlevel macros with hygienically introduced bindings
  (define-syntax foo
    (syntax-rules ()
      ((_ x) (let ((tmp x)) (assert tmp "fail")))))   ; "tmp" not seen when 
      	     	  	    	    		      ; expanding assert

* test hygiene
* test macros expanding into macro calls
* test macros expanding into syntax-rules
* test local define{-values,-syntax,} expansion
* test pattern matching macros and interaction with hygienic macros
* test extended lambda-lists
* test examples from r5rs spec
* test macro-expansions
** quoted literals
** qualified symbols
** extended lambda-list markers
** local definitions

* test r4rstest
* test benchmarks

* reimplement chicken-more-macros hygienically

* add low-level support for modules
* find suitable design for modules
** s48
** gauche

* update manual
** expand unit (move stuff from eval)
** document extensions
*** user defined ellipsis
** ack synrules authors

* csi
** describe should print if symbol is interned

* put mtest into "tests" directory and run on "make check"
** rename to "syntax-tests.scm"

* eggs to be adapted/obsoleted
** syntax-case (eval/expand integration?)
** codewalk
   must probably go... influences modules, crunch
** remove
   modules
** syntactic-closures?
** simple-macros
