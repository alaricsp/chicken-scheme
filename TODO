TODO for macro/module system					-*- Outline -*-

* last test fails (binding syntactic keyword "=>" around a cond-expression)

* reimplement default macros hygienically

* test user-defined ellipsis
* test hygiene
* test macros expanding into macro calls
* test macros expanding into syntax-rules
* test local define{-values,-syntax,} expansion
* test referential transparency
* test interaction of hygienic and non-hygienic macros
* test pattern matching macros and interaction with hygienic macros
* test extended lambda-lists
* test examples from r5rs spec
* test macro-expansions
** quoted literals
** keywords
** qualified symbols
** extended lambda-list markers
** local definitions

* test r4rstest
* test benchmarks

* reimplement chicken-more-macros hygienically

* integrate syntax-rules (synrules.scm)
** needs some form of syntax-quote?
** test macros expanding into syntax-rules with literals

* add low-level support for modules
* find suitable design for modules
** s48
** gauche

* update manual
** expand unit (move stuff from eval)
** document extensions
*** user defined ellipsis
** ack synrules authors

* csi
** describe should print if symbol is interned

* put mtest into "tests" directory and run on "make check"

* eggs to be adapted
** syntax-case (eval/expand integration?)
** codewalk
   must probably go... influences modules, crunch
** remove
   modules
