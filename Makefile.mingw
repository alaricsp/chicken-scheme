# Makefile.mingw - configuration for MinGW (no MSYS) -*- Makefile -*-
#
# Copyright (c) 2007, Felix L. Winkelmann
# Copyright (c) 2008-2009, The Chicken Team
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following
# conditions are met:
#
#   Redistributions of source code must retain the above copyright notice, this list of conditions and the following
#     disclaimer. 
#   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
#     disclaimer in the documentation and/or other materials provided with the distribution. 
#   Neither the name of the author nor the names of its contributors may be used to endorse or promote
#     products derived from this software without specific prior written permission. 
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


SEP = \\
SRCDIR =.$(SEP)

# platform configuration

DLLSINPATH = 1
ARCH = x86
WINDOWS = 1
WINDOWS_SHELL = 1
UNAME_SYS = MinGW

ifeq ($(ARCH),x86)
HACKED_APPLY = 1
else
HACKED_APPLY =
endif

# file extensions

SO = .dll
EXE = .exe

# options

C_COMPILER ?= gcc
C_COMPILER_OPTIONS = -fno-strict-aliasing -DHAVE_CHICKEN_CONFIG_H
ifdef DEBUGBUILD
C_COMPILER_OPTIMIZATION_OPTIONS ?= -g -Wall -Wno-unused
else
C_COMPILER_OPTIMIZATION_OPTIONS ?= -Os
endif
C_COMPILER_SHARED_OPTIONS = -DPIC
C_COMPILER_GUI_RUNTIME_OPTIONS = -DC_WINDOWS_GUI
LINKER_LINK_SHARED_LIBRARY_OPTIONS = -shared
LIBRARIES = -lm -lws2_32
LINKER_OPTIONS = -Wl,--enable-auto-import
LIBCHICKEN_SO_LINKER_OPTIONS = -Wl,--out-implib,libchicken.dll.a
LIBUCHICKEN_SO_LINKER_OPTIONS = -Wl,--out-implib,libuchicken.dll.a
LIBCHICKENGUI_SO_LINKER_OPTIONS = -Wl,--out-implib,libchickengui.dll.a
LIBCHICKEN_SO_LIBRARIES = -lm -lws2_32 
LIBUCHICKEN_SO_LIBRARIES = -lm -lws2_32 
LIBCHICKENGUI_SO_LIBRARIES = -lm -lkernel32 -luser32 -lgdi32 -lws2_32 
LIBCHICKENGUI_IMPORT_LIBRARY = libchickengui.dll.a
LIBCHICKEN_IMPORT_LIBRARY = libchicken.dll.a
LIBUCHICKEN_IMPORT_LIBRARY = libuchicken.dll.a
MAKEDIR_COMMAND_OPTIONS =

# special files

CHICKEN_CONFIG_H = chicken-config.h
APPLY_HACK_OBJECT = apply-hack.$(ARCH)$(O)
POSIXFILE = posixwin

# select default and internal settings

CUSTOM_CHICKEN_DEFAULTS=1

include $(SRCDIR)defaults.make

# main target

all: libchicken$(A) libuchicken$(A) chicken$(EXE) csi$(EXE) chicken-profile$(EXE) \
	csc$(EXE) libchicken$(SO) \
	libuchicken$(SO) libchickengui$(SO) libchickengui$(A) chicken-install$(EXE) \
	chicken-status$(EXE) chicken-uninstall$(EXE)

chicken-config.h: chicken-defaults.h
	echo #define HAVE_DIRENT_H 1 >$@
	echo #define HAVE_INTTYPES_H 1 >>$@
	echo #define HAVE_LIMITS_H 1 >>$@
	echo #define HAVE_LONG_LONG 1 >>$@
	echo #define HAVE_MEMMOVE 1 >>$@
	echo #define HAVE_MEMORY_H 1 >>$@
	echo #define HAVE_STDINT_H 1 >>$@
	echo #define HAVE_STDLIB_H 1 >>$@
	echo #define HAVE_STRERROR 1 >>$@
	echo #define HAVE_STRINGS_H 1 >>$@
	echo #define HAVE_STRING_H 1 >>$@
	echo #define HAVE_STRTOLL 1 >>$@
	echo #define HAVE_SYS_STAT_H 1 >>$@
	echo #define HAVE_SYS_TYPES_H 1 >>$@
	echo #define HAVE_UNISTD_H 1 >>$@
	echo #define HAVE_UNSIGNED_LONG_LONG 1 >>$@
	echo #define HAVE_WINDOWS_H 1 >>$@
	echo #define HAVE__STRTOI64 1 >>$@
	echo #define STDC_HEADERS 1 >>$@
	echo #define HAVE_ALLOCA_H 1 >>$@
	echo #define HAVE_DIRECT_H 1 >>$@
	echo #define HAVE_ERRNO_H 1 >>$@
	echo #define HAVE_GCVT 1 >>$@
	echo #define HAVE_LOADLIBRARY 1 >>$@
	echo #define HAVE_GETPROCADDRESS 1 >>$@
	echo #define HAVE_WINSOCK2_H 1 >>$@
	echo #define HAVE_WS2TCPIP_H 1 >>$@
	echo #define C_STACK_GROWS_DOWNWARD 1 >>$@
ifdef GCHOOKS
	echo #define C_GC_HOOKS >>$@
endif
ifdef SYMBOLGC
	echo #define C_COLLECT_ALL_SYMBOLS >>$@
endif
ifdef NOAPPLYHOOK
	echo #define C_NO_APPLY_HOOK >>$@
endif
	echo #define C_HACKED_APPLY >>$@
	type chicken-defaults.h >>$@

chicken-defaults.h:
	echo /* generated */ >$@
	echo #define C_BUILD_TAG "$(BUILD_TAG)" >>$@
	echo #define C_CHICKEN_PROGRAM "$(CHICKEN_PROGRAM)$(EXE)" >>$@
	echo #define C_WINDOWS_SHELL 1 >>$@
	echo #ifndef C_INSTALL_CC >>$@
	echo # define C_INSTALL_CC "$(C_COMPILER)" >>$@
	echo #endif >>$@
	echo #ifndef C_INSTALL_CXX >>$@
	echo # define C_INSTALL_CXX "$(CXX_COMPILER)" >>$@
	echo #endif >>$@
	echo #ifndef C_INSTALL_CFLAGS >>$@
	echo # define C_INSTALL_CFLAGS "$(C_COMPILER_OPTIONS) $(C_COMPILER_OPTIMIZATION_OPTIONS)" >>$@
	echo #endif >>$@
	echo #ifndef C_INSTALL_LDFLAGS >>$@
	echo # define C_INSTALL_LDFLAGS "$(LINKER_OPTIONS) $(LINKER_OPTIMIZATION_OPTIONS)" >>$@
	echo #endif >>$@
	echo #ifndef C_INSTALL_SHARE_HOME >>$@
	echo # define C_INSTALL_SHARE_HOME "$(DATADIR)" >>$@
	echo #endif >>$@
	echo #ifndef C_INSTALL_BIN_HOME >>$@
	echo # define C_INSTALL_BIN_HOME "$(BINDIR)" >>$@
	echo #endif >>$@
	echo #ifndef C_INSTALL_EGG_HOME >>$@
	echo # define C_INSTALL_EGG_HOME "$(EGGDIR)" >>$@
	echo #endif >>$@
	echo #ifndef C_INSTALL_LIB_HOME >>$@
	echo # define C_INSTALL_LIB_HOME "$(LIBDIR)" >>$@
	echo #endif >>$@
	echo #ifndef C_INSTALL_STATIC_LIB_HOME >>$@
	echo # define C_INSTALL_STATIC_LIB_HOME "$(LIBDIR)" >>$@
	echo #endif >>$@
	echo #ifndef C_INSTALL_INCLUDE_HOME >>$@
	echo # define C_INSTALL_INCLUDE_HOME "$(INCDIR)" >>$@
	echo #endif >>$@
	echo #ifndef C_INSTALL_MORE_LIBS >>$@
	echo # define C_INSTALL_MORE_LIBS "$(LIBRARIES)" >>$@
	echo #endif >>$@
	echo #ifndef C_INSTALL_MORE_STATIC_LIBS >>$@
	echo # define C_INSTALL_MORE_STATIC_LIBS "$(LIBRARIES)" >>$@
	echo #endif >>$@
	echo #ifndef C_DEFAULT_TARGET_STACK_SIZE >>$@
	echo # define C_DEFAULT_TARGET_STACK_SIZE $(NURSERY) >>$@
	echo #endif >>$@
	echo #ifndef C_DEFAULT_TARGET_HEAP_SIZE >>$@
	echo # define C_DEFAULT_TARGET_HEAP_SIZE 0 >>$@
	echo #endif >>$@
	echo #ifndef C_STACK_GROWS_DOWNWARD >>$@
	echo # define C_STACK_GROWS_DOWNWARD $(STACKDIRECTION) >>$@
	echo #endif >>$@
	echo #ifndef C_TARGET_MORE_LIBS >>$@
	echo # define C_TARGET_MORE_LIBS "$(TARGET_LIBRARIES)" >>$@
	echo #endif >>$@
	echo #ifndef C_TARGET_MORE_STATIC_LIBS >>$@
	echo # define C_TARGET_MORE_STATIC_LIBS "$(TARGET_LIBRARIES)" >>$@
	echo #endif >>$@
	echo #ifndef C_TARGET_CC >>$@
	echo # define C_TARGET_CC "$(TARGET_C_COMPILER)" >>$@
	echo #endif >>$@
	echo #ifndef C_TARGET_CXX >>$@
	echo # define C_TARGET_CXX "$(TARGET_CXX_COMPILER)" >>$@
	echo #endif >>$@
	echo #ifndef C_TARGET_CFLAGS >>$@
	echo # define C_TARGET_CFLAGS "$(TARGET_C_COMPILER_OPTIONS) $(TARGET_C_COMPILER_OPTIMIZATION_OPTIONS)" >>$@
	echo #endif >>$@
	echo #ifndef C_TARGET_LDFLAGS >>$@
	echo # define C_TARGET_LDFLAGS "$(TARGET_LINKER_OPTIONS) $(TARGET_LINKER_OPTIMIZATION_OPTIONS)" >>$@
	echo #endif >>$@
	echo #ifndef C_CROSS_CHICKEN >>$@
	echo # define C_CROSS_CHICKEN $(CROSS_CHICKEN) >>$@
	echo #endif >>$@
	echo #ifndef C_TARGET_BIN_HOME >>$@
	echo # define C_TARGET_BIN_HOME "$(TARGET_PREFIX)/bin" >>$@
	echo #endif >>$@
	echo #ifndef C_TARGET_LIB_HOME >>$@
	echo # define C_TARGET_LIB_HOME "$(TARGET_PREFIX)/lib" >>$@
	echo #endif >>$@
	echo #ifndef C_TARGET_RUN_LIB_HOME >>$@
	echo # define C_TARGET_RUN_LIB_HOME "$(TARGET_PREFIX)/lib" >>$@
	echo #endif >>$@
	echo #ifndef C_TARGET_SHARE_HOME >>$@
	echo # define C_TARGET_SHARE_HOME "$(TARGET_PREFIX)/share" >>$@
	echo #endif >>$@
	echo #ifndef C_TARGET_INCLUDE_HOME >>$@
	echo # define C_TARGET_INCLUDE_HOME "$(TARGET_PREFIX)/include" >>$@
	echo #endif >>$@
	echo #ifndef C_TARGET_STATIC_LIB_HOME >>$@
	echo # define C_TARGET_STATIC_LIB_HOME "$(TARGET_PREFIX)/lib" >>$@
	echo #endif >>$@
	echo #ifndef C_CSC_PROGRAM" >>$@
	echo # define C_CSC_PROGRAM "$(CSC_PROGRAM)" >>$@
	echo #endif" >>$@
	echo #ifndef C_CSI_PROGRAM" >>$@
	echo # define C_CSI_PROGRAM "$(CSI_PROGRAM)" >>$@
	echo #endif" >>$@
	echo #ifndef C_CHICKEN_BUG_PROGRAM" >>$@
	echo # define C_CHICKEN_BUG_PROGRAM "$(CHICKEN_BUG_PROGRAM)" >>$@
	echo #endif" >>$@
	echo #ifndef C_BINARY_VERSION >>$@
	echo # define C_BINARY_VERSION $(BINARYVERSION) >>$@
	echo #endif >>$@

include $(SRCDIR)rules.make
