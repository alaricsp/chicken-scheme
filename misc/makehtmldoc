#!/bin/sh
#| ;;; makehtmldoc -*- Hen -*-
exec csi -s $0 "$@"
|#

;;; usage: misc/makehtmldoc [PAGE]

(use html-stream stream-ext srfi-40 stream-wiki utils srfi-13 url)

(define-constant +outpath+ "html")
(define-constant +extension-path+ "wiki-extensions")
(define-constant +index-page+ "The User's Manual")

(define *pages* (directory "wiki"))
(define *only* (:optional (command-line-arguments) #f))
	   
(define (hyphen s)
  (string-substitute " " "-" s #t) )

(define (clean-link lnk)
  (cond ((or (string-prefix? "toc:" lnk) (string-prefix? "tags:" lnk))
	 lnk)
	((string-ci=? lnk +index-page+) "index.html")
	((any (lambda (f) (string-ci=? f lnk)) *pages*)
	 (string-append (hyphen (string-downcase lnk)) ".html|" lnk) )
	((string-prefix? "http:" lnk) lnk)
	(else (string-append "http://galinha.ucpel.tche.br/" lnk) ) ) )

(define (convert-page page)
  (let ((data (read-all (make-pathname "wiki" page))))
    (string-concatenate
     (let loop ((i 0) (all '()))
       (match (string-search-positions "\\[\\[([^]]+)\\]\\]" data i)
	 (((s e) (ls le))
	  (let ((lnk (substring data ls le)))
	    (loop
	     e
	     (cons
	      (string-append
	       (substring data i (+ 2 s))
	       (clean-link lnk)
	       "]]")
	      all) ) ) )
	 (_ (reverse (cons (substring data i) all))) ) ) ) ) )

(define *loaded-extensions* (make-hash-table))

(for-each
 (cut load-extensions-from-file *loaded-extensions* <>)
 (glob (conc +extension-path+ "/*")) )

(for-each
 (lambda (p)
   (let* ((pagename p)
	  (po (hyphen (string-downcase 
		       (make-pathname
			+outpath+
			(if (string=? pagename +index-page+) "index" pagename) "html")))))
     (print p " -> " po " ...")
     (with-output-to-file po
       (lambda ()
	 (printf "<html><head><title>CHICKEN User's Manual - ~a</title></head><body>~%" pagename)
	 (write-stream
	  (wiki->html
	   (string->stream (convert-page p))
	   stream-null
	   ""
	   (constantly stream-null)
	   (constantly stream-null)
	   (make-hash-table)
	   (make-html-header 1)
	   (constantly stream-null)
	   (constantly #t)
	   *loaded-extensions*) )
	 (printf "~%</body></html>") ) ) ) )
 (if *only* (list *only*) *pages*) )
