(use files)

(assert (equal? "/" (pathname-directory "/")))
(assert (equal? "/" (pathname-directory "/abc")))
(assert (equal? "abc" (pathname-directory "abc/")))
(assert (equal? "abc" (pathname-directory "abc/def")))
(assert (equal? "abc" (pathname-directory "abc/def.ghi")))
(assert (equal? "abc" (pathname-directory "abc/.def.ghi")))
(assert (equal? "abc" (pathname-directory "abc/.ghi")))
(assert (equal? "/abc" (pathname-directory "/abc/")))
(assert (equal? "/abc" (pathname-directory "/abc/def")))
(assert (equal? "/abc" (pathname-directory "/abc/def.ghi")))
(assert (equal? "/abc" (pathname-directory "/abc/.def.ghi")))
(assert (equal? "/abc" (pathname-directory "/abc/.ghi")))
(assert (equal? "q/abc" (pathname-directory "q/abc/")))
(assert (equal? "q/abc" (pathname-directory "q/abc/def")))
(assert (equal? "q/abc" (pathname-directory "q/abc/def.ghi")))
(assert (equal? "q/abc" (pathname-directory "q/abc/.def.ghi")))
(assert (equal? "q/abc" (pathname-directory "q/abc/.ghi")))

(define-syntax test
  (syntax-rules ()
    ((_ expected exp)
     (let ((result exp)
	   (expd expected))
       (unless (equal? result expd)
	 (error "test failed" result expd 'exp))))))

(test "./" (normalize-pathname "" 'unix))
(test ".\\" (normalize-pathname "" 'windows))
(test "./" (normalize-pathname "/" 'unix))
(test "./" (normalize-pathname "./" 'unix))
(test "a" (normalize-pathname "a"))
(test "a/" (normalize-pathname "a/" 'unix))
(test "a/b" (normalize-pathname "a/b" 'unix))
(test "a/b" (normalize-pathname "a\\b" 'unix))
(test "a\\b" (normalize-pathname "a\\b" 'windows))
(test "a\\b" (normalize-pathname "a/b" 'windows))
(test "a/b/" (normalize-pathname "a/b/" 'unix))
(test "a/b/" (normalize-pathname "a/b//" 'unix))
(test "a/b" (normalize-pathname "a//b" 'unix))
(test "/a/b" (normalize-pathname "/a//b" 'unix))
(test "/a/b" (normalize-pathname "///a//b" 'unix))
(test "c:a\\b" (normalize-pathname "c:a/./b" 'windows))
(test "c:/a/b" (normalize-pathname "c:/a/./b" 'unix))
(test "c:a\\b" (normalize-pathname "c:a/./b" 'windows))
(test "c:b" (normalize-pathname "c:a/../b" 'windows))
(test "c:\\b" (normalize-pathname "c:\\a\\..\\b" 'windows))
(test "a/b" (normalize-pathname "a/./././b" 'unix))
(test "a/b" (normalize-pathname "a/b/c/d/../.." 'unix))
(test "a/b/" (normalize-pathname "a/b/c/d/../../" 'unix))

(define home (get-environment-variable "HOME"))

(test (string-append home "/foo") (normalize-pathname "~/foo" 'unix))
(test "c:~/foo" (normalize-pathname "c:~/foo" 'unix))
(test (string-append home "\\foo") (normalize-pathname "c:~\\foo" 'windows))
